version: "3.9"

services:

  frontend:
    build: ./frontend
    networks: [appnet]

  nginx:
    build: ./nginx
    ports: ["8080:80"]
    depends_on: [frontend, match_service]
    networks: [appnet]

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-mydatabase}
    volumes:
      - dbdata:/var/lib/postgresql/data

    networks: [appnet]

  db_api:
    build: ./DB_API
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB:-mydatabase}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    depends_on: [db]
    ports: ["5001:5000"]
    networks: [appnet]

  steam_api:
    build: ./Steam_API
    environment:
      - STEAM_API_KEY=${STEAM_API_KEY:-}
    ports: ["5002:5000"]
    networks: [appnet]

  ocr:
    build: ./OCR
    ports: ["5003:5003"]
    networks: [appnet]

  llm:
    build: ./Gemini_API
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
    ports: ["5004:5004"]
    networks: [appnet]

  match_service:
    build: ./match_service
    environment:
      - USE_SQLITE=1
      - SQLITE_PATH=/data/matches.db
      - STEAM_API_URL=http://steam_api:5002
      - OCR_URL=http://ocr:5003
      - LLM_URL=http://llm:5004
    volumes:
      - matchdata:/data
    depends_on: [steam_api, ocr, llm]
    ports: ["5000:5000"]
    networks: [appnet]


volumes:
  dbdata:
  matchdata:  

networks:
  appnet:
    driver: bridge
