name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # detect-changes:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     db-api-changed: ${{ steps.changes.outputs.db_api }}
  #     steam-api-changed: ${{ steps.changes.outputs.steam_api }}
  #     gemini-changed: ${{ steps.changes.outputs.gemini }}
  #     ocr-changed: ${{ steps.changes.outputs.ocr }}
  #     pypelyne-changed: ${{ steps.changes.outputs.pypelyne }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: dorny/paths-filter@v2
  #       id: changes
  #       with:
  #         filters: |
  #           db_api:
  #             - 'DB_API/**'
  #           steam_api:
  #             - 'Steam_API/**'
  #           gemini:
  #             - 'Gemini/**'
  #           ocr:
  #             - 'OCR/**'
  #           pypelyne:
  #             - 'pypelyne_service/**'

  build-db-api:
    # needs: detect-changes
    # if: needs.detect-changes.outputs.db-api-changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push DB API Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./DB_API
          push: true
          tags: ghcr.io/ruanspijkerman/nsarg_template:db-api-latest
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}

  build-steam-api:
    # needs: detect-changes
    # if: needs.detect-changes.outputs.steam-api-changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Steam API Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Steam_API
          push: true
          tags: ghcr.io/ruanspijkerman/nsarg_template:steam-api-latest
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}

  build-gemini:
    # needs: detect-changes
    # if: needs.detect-changes.outputs.gemini-changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Gemini Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Gemini
          push: true
          tags: ghcr.io/nsarg_template:gemini-latest
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}

  build-ocr:
    # needs: detect-changes
    # if: needs.detect-changes.outputs.ocr-changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push OCR Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./OCR
          push: true
          tags: ghcr.io/ruanspijkerman/nsarg_template:ocr-latest
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}

  build-pypelyne:
    # needs: detect-changes
    # if: needs.detect-changes.outputs.pypelyne-changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Pypelyne Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./pypelyne_service
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/sagteware-argitektuur-da3:pypelyne-latest
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}